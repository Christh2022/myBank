name: CI Fullstack with Docker & GHCR

on:
  push:
    branches: [ "main", "develop", "roldi" ]
  pull_request:
    branches: [ "main", "develop", "roldi" ]

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.3
        env:
          MYSQL_DATABASE: mybank_test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # -----------------------------
      # Checkout repository + submodules
      # -----------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # <- Clonage de tous les submodules

      # -----------------------------
      # Debug : vÃ©rifier backend
      # -----------------------------
      - name: List backend folder
        run: ls -R ./backend

      # -----------------------------
      # Backend - PHPUnit tests
      # -----------------------------
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql

      - name: Install Composer dependencies
        working-directory: ./backend
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Run migrations
        working-directory: ./backend
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/mybank_test
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Run PHPUnit tests
        working-directory: ./backend
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/mybank_test
        run: ./vendor/bin/phpunit --testdox

      # -----------------------------
      # Docker Build & Push
      # -----------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/backend:latest

      - name: Build & Push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ghcr.io/${{ github.repository }}/frontend:latest

      - name: Build & Push Nginx image
        uses: docker/build-push-action@v5
        with:
          context: ./docker/nginx
          file: ./docker/nginx/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}/nginx:latest
